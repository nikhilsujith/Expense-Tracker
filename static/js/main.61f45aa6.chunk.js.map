{"version":3,"sources":["context/contextReducer.js","context/context.js","components/Main/styles.js","constants/categories.js","utils/formatDate.js","components/SnackBar/styles.js","components/SnackBar/Snackbar.jsx","components/Main/Form/Form.jsx","components/Main/List/styles.js","components/Main/List/List.jsx","components/Main/Main.jsx","components/InfoCard.jsx","components/Details/styles.js","useTransactions.js","components/Details/Details.jsx","styles.js","App.js","index.js"],"names":["contextReducer","state","action","transactions","type","filter","t","id","payload","localStorage","setItem","JSON","stringify","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","balance","reduce","sum","currVal","amount","value","deleteTransaction","addTransaction","transaction","makeStyles","theme","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cartContent","divider","margin","incomeColors","expenseColors","incomeCategories","color","expenseCategories","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","root","width","marginTop","spacing","CustomizedSnackbar","open","setOpen","classes","useStyles","handleClose","event","reason","className","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","elevation","variant","category","Form","useState","formData","setFormData","useContext","segment","useSpeechContext","createTransaction","Number","isNaN","includes","uuidv4","useEffect","intent","isFinal","entities","forEach","e","charAt","slice","toLowerCase","map","ic","selectedCategories","Grid","container","item","xs","Typography","align","guttterButtom","words","w","FormControl","fullWidth","InputLabel","Select","onChange","target","MenuItem","c","TextField","label","Button","onClick","avatarIncome","backgroundColor","green","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","console","log","dense","Slide","direction","in","mountOnEnter","unmountOnExit","ListItem","ListItemAvatar","Avatar","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","Delete","Main","Math","round","random","Card","CardHeader","title","CardContent","Divider","income","borderBottom","expense","useTransactions","rightTransactions","total","acc","categories","find","filteredCategories","sc","chartData","datasets","data","labels","Details","desktop","breakpoints","up","display","mobile","down","main","paddingBottom","last","marginBottom","grid","App","speechState","useRef","SpeechState","Recording","current","scrollIntoView","alignItems","justify","style","sm","ref","ReactDOM","render","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.61f45aa6.chunk.js","sourcesContent":["// Reducer is a function which takes in a old state and an action and returns a new state\n\nconst contextReducer  = (state, action) => { //an action could be add transactions or delete transaction etc\n\n    let transactions;\n\n    switch (action.type) {\n        case 'DELETE_TRANSACTION':\n            transactions = state.filter((t) => t.id !== action.payload ); //filters out all id's which which don't match the given id\n            \n            localStorage.setItem('transactions', JSON.stringify(transactions));\n            \n            return transactions;\n\n        case 'ADD_TRANSACTION':\n            transactions = [action.payload, ...state]; // says new transaction pops up at the start and all other transactions remains\n            \n            localStorage.setItem('transactions', JSON.stringify(transactions));\n\n            return transactions;\n\n        default:\n            return state;\n    }\n}\n\nexport default contextReducer;","// Logic for context API\nimport React, { useReducer, createContext } from 'react';\n\nimport contextReducer from './contextReducer'\n\n// set initial state to empty since we won't have any transactions in the start\nconst initialState = JSON.parse(localStorage.getItem('transactions')) || [];\n\n// creating our context\nexport const ExpenseTrackerContext = createContext(initialState);\n\n// Here we render the full logic for the context; in the index.js file - \n//  everything wrapped under Provider will have access to the contents within it \nexport const Provider = ({children}) => {\n    \n    /* const [state, dispatch] = useReducer(contextReducer, initialState)  //similar to useState */\n    // same as above with replaced names\n    const [transactions, dispatch] = useReducer(contextReducer, initialState)\n\n    /* Action Creators */\n    // to dispatch something, it means to change state of transaction \n    const deleteTransaction = (id) => {\n        dispatch( {type: 'DELETE_TRANSACTION', payload: id} ); //reads as : delete this (type) with id (payload.id)\n    }\n    const addTransaction = (transaction) => {\n        dispatch( {type: 'ADD_TRANSACTION', payload: transaction} ); //reads as: add this (type) with data from 'transaction'\n    }\n\n    const balance = transactions.reduce((sum, currVal) => {\n        return (currVal.type === 'Expense' ? sum - currVal.amount : sum + currVal.amount);\n    }, 0);\n    \n \n    return(\n        <ExpenseTrackerContext.Provider value={ {\n            deleteTransaction, \n            addTransaction,\n            transactions,\n            balance\n        } }>\n             { children } \n        </ExpenseTrackerContext.Provider>\n    );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  cartContent: {\n    paddingTop: 0,\n  },\n  divider: {\n    margin: '20px 0',\n  },\n}));\n","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\n\nexport const incomeCategories = [\n  { type: 'Business', amount: 0, color: incomeColors[0] },\n  { type: 'Investments', amount: 0, color: incomeColors[1] },\n  { type: 'Extra income', amount: 0, color: incomeColors[2] },\n  { type: 'Deposits', amount: 0, color: incomeColors[3] },\n  { type: 'Lottery', amount: 0, color: incomeColors[4] },\n  { type: 'Gifts', amount: 0, color: incomeColors[5] },\n  { type: 'Salary', amount: 0, color: incomeColors[6] },\n  { type: 'Savings', amount: 0, color: incomeColors[7] },\n  { type: 'Rental income', amount: 0, color: incomeColors[8] },\n];\n\nexport const expenseCategories = [\n  { type: 'Bills', amount: 0, color: expenseColors[0] },\n  { type: 'Car', amount: 0, color: expenseColors[1] },\n  { type: 'Clothes', amount: 0, color: expenseColors[2] },\n  { type: 'Travel', amount: 0, color: expenseColors[3] },\n  { type: 'Food', amount: 0, color: expenseColors[4] },\n  { type: 'Shopping', amount: 0, color: expenseColors[5] },\n  { type: 'House', amount: 0, color: expenseColors[6] },\n  { type: 'Entertainment', amount: 0, color: expenseColors[7] },\n  { type: 'Phone', amount: 0, color: expenseColors[8] },\n  { type: 'Pets', amount: 0, color: expenseColors[9] },\n  { type: 'Other', amount: 0, color: expenseColors[10] },\n];\n\nexport const resetCategories = () => {\n  incomeCategories.forEach((c) => c.amount = 0);\n  expenseCategories.forEach((c) => c.amount = 0);\n};","const formatDate = (date) =>{\n    const d = new Date(date);\n    let month = `${ d.getMonth() + 1}`;\n    let day = `${ d.getDate() }`;\n    const year = d.getFullYear();\n\n    if(month.length < 2 ){\n        month = `0${month}`;\n    }\n    if(day.length < 2 ){\n        day = `0${day}`;\n    }\n\n    return [year, month, day].join('-');\n}\n\nexport default formatDate;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport useStyles from './styles';\n\nconst CustomizedSnackbar = ({ open, setOpen }) => {\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar \n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }} \n      open={open} autoHideDuration={6000} onClose={handleClose}>\n        <MuiAlert onClose={handleClose} severity=\"success\" elevation={6} variant=\"filled\">Transaction successfully created.</MuiAlert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default CustomizedSnackbar;\n","import React, { useState, useContext, useEffect } from 'react'\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport useStyles from '../styles';\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSpeechContext } from '@speechly/react-client';\n// importing categories from categories file [this could be a database with nodejs]\nimport { incomeCategories, expenseCategories } from '../../../constants/categories' \n// importing date format\nimport formatDate from '../../../utils/formatDate';\nimport CustomizedSnackbar from '../../SnackBar/Snackbar'\n\n\n\n\nconst initialState = {\n    amount: '', \n    category: '',\n    type: '',\n    date: formatDate(new Date()),\n}\nconst Form = () => {\n    \n    const classes = useStyles();\n    const [formData, setFormData] = useState(initialState);\n    const { addTransaction } = useContext(ExpenseTrackerContext);\n    const { segment } = useSpeechContext();\n    const [open, setOpen] = useState(false);\n\n    const createTransaction = () =>{\n        if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\n        const transaction = { ...formData, amount: Number(formData.amount), id: uuidv4()}\n        \n        setOpen(true);\n        addTransaction(transaction); //send the whole transaction object to context > addTransaction method\n        setFormData(initialState); //reset form to blank AKA initial state\n    }\n\n    useEffect( () => {\n        if(segment){\n            if(segment.intent.intent === 'add_expense'){\n                setFormData({ ...formData, type: 'Expense' });\n            }\n            else if(segment.intent.intent === 'add_income'){\n                setFormData({...formData, type: 'Income'});\n            }\n            else if(segment.isFinal && segment.intent.intent === \"create_transaction\") {\n                return createTransaction();\n            }\n            else  if(segment.isFinal && segment.intent.intent === \"cancel_transaction\") {\n                return setFormData(initialState);\n            }\n\n            segment.entities.forEach((e) => {\n                const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`;\n\n                switch(e.type){\n                    case 'amount' :\n                        setFormData({ ...formData, amount: e.value});\n                        break;\n                    case 'category':\n                        if(incomeCategories.map( (ic) => ic.type ).includes(category)){\n                            setFormData({ ...formData, type: 'Income', category });\n                        }\n                        else if(expenseCategories.map( (ic) => ic.type ).includes(category)){\n                            setFormData({ ...formData, type: 'Expense', category  });\n                        }\n                        \n                        break;\n                    case 'date':\n                        setFormData({ ...formData, date: e.value });\n                        break;\n                    default:\n                        break;\n                }\n            })\n\n            if(segment.isFinal && formData.amount && formData.category && formData.type && formData.date){\n                createTransaction();\n            }\n        }\n    }, [segment] )\n\n//    Variable to store the category needed based on what's selected in the form\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n\n    return (\n        <Grid container spacing = { 2 }>\n            <CustomizedSnackbar open={open} setOpen={setOpen}></CustomizedSnackbar> \n            <Grid item xs = {12}>\n                <Typography align = \"center\" variant = \"subtitle2\" guttterButtom>\n                    { \n                        segment ? (\n                            <>\n                                {segment.words.map((w) => w.value).join(\"  \")}\n                            </> \n                        ): null \n                    } \n                </Typography>\n            </Grid>\n            <Grid item xs = { 6 }>\n                <FormControl fullWidth>\n                    <InputLabel>Type</InputLabel>\n                    <Select value={formData.type} onChange = {(e)=> setFormData({ ...formData, type:e.target.value })}>\n                       <MenuItem value=\"Income\">Income</MenuItem>\n                       <MenuItem value=\"Expense\">Expense</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs = { 6 }>\n                <FormControl fullWidth>\n                    <InputLabel>Category</InputLabel>\n                    <Select value={formData.category} onChange={(e) => setFormData( {...formData, category: e.target.value} ) }>\n                        { selectedCategories.map( (c) => <MenuItem key={ c.type } value = {c.type}>{c.type}</MenuItem> )}\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs = { 6 }>\n                <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData( { ...formData, amount: e.target.value } ) } fullWidth />\n\n            </Grid>\n            <Grid item xs = { 6 }> \n                <TextField type=\"date\" label=\"Date\" value={formData.date} onChange={ (e) => setFormData( { ...formData, date: formatDate(e.target.value) } ) } fullWidth />\n            </Grid>\n            <Button className = { classes.Button } variant = \"outlined\" color=\"primary\" fullWidth onClick={createTransaction}> Create </Button>\n        </Grid>\n    )\n}\n\nexport default Form\n","import { makeStyles } from '@material-ui/core/styles';\nimport { red, green } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  avatarIncome: {\n    color: '#fff',\n    backgroundColor: green[500],\n  },\n  avatarExpense: {\n    color: theme.palette.getContrastText(red[500]),\n    backgroundColor: red[500],\n  },\n  list: {\n    maxHeight: '150px',\n    overflow: 'auto',\n  },\n}));\n","import React from 'react'\nimport { List as MUIList, ListItem, ListItemAvatar, ListItemText, Avatar, ListItemSecondaryAction, IconButton, Slide } from '@material-ui/core';\nimport { Delete, MoneyOff } from '@material-ui/icons';\n\nimport useStyles from './styles';\n\n// context stuff\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { useContext } from 'react';\n\nconst List = () => {\n    const classes = useStyles(); \n    \n    /* const {globalState} = useContext(ExpressTrackerContext)  -> gives access to addTransaction and deleteTransaction*/\n    //  but here, we'll destructure globalState and just use deleteTransaction\n    const { deleteTransaction, transactions } = useContext(ExpenseTrackerContext);\n    console.log(deleteTransaction); \n     \n    // // demo transaction\n    // const transactions = [\n    //     {id: 1, type: \"Income\", category: 'Salary', amount: 50, date: 'Mon Dec 21 2020 '},\n    //     {id: 2, type: \"Expense\", category: 'Pets', amount: 150, date: 'Mon Dec 19 2020 '},\n    //     {id: 3, type: \"Income\", category: 'Salary', amount:100, date: 'Mon Dec 20 2020 '}\n    // ];\n\n    return (\n        <MUIList dense = {false} className = {classes.list}>\n            { transactions.map( (transaction) => (\n                <Slide direction=\"down\" in mountOnEnter unmountOnExit key = { transaction.id }>\n                    <ListItem>\n                        <ListItemAvatar>\n                            <Avatar className = { transaction.type === 'Income' ? classes.avatarIncome : classes.avatarExpense}>\n                                <MoneyOff />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText primary = { transaction.category } secondary={`$${ transaction.amount } - ${ transaction.date }`}/>\n                        <ListItemSecondaryAction>\n                            <IconButton edge = \"end\" aria-label = \"delete\" onClick={ () => deleteTransaction(transaction.id)  }>\n                                <Delete />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </Slide>\n            ) ) }\n        </MUIList>\n    )\n}\n\nexport default List\n","import React, { useContext } from 'react'\nimport{ Card, CardHeader, CardContent, Typography, Grid, Divider } from '@material-ui/core';\nimport { ExpenseTrackerContext } from '../../context/context';\n\nimport useStyles from './styles';\n\nimport Form from './Form/Form';\nimport List from './List/List';\n\nimport InfoCard from '../InfoCard';\n\nconst Main = () => {\n    const classes = useStyles();\n    const { balance } = useContext(ExpenseTrackerContext);\n\n    return (\n        <Card className = {classes.root}>\n            <CardHeader title = \"Expense Tracker\" />\n            <CardContent>\n                <Typography variant=\"h5\" align=\"center\">Total Balance ${balance}</Typography>\n                {/* <Typography variant=\"subheader\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\n                    <InfoCard></InfoCard>\n                </Typography> */}\n                <Divider />\n                <Form />\n                </CardContent>\n                <CardContent className = { classes.CardContent }>\n                    <Grid container spacing = { 2 }>\n                        <Grid item xs = { 12 }>\n                            <List />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n        </Card>\n    )\n}\n\nexport default Main\n","import React from 'react';\n\nconst isIncome = Math.round(Math.random());\n\nconst InfoCard = () => {\n    return (\n        <div style = {{textAlign: 'center', padding: '0 10%'}}>\n            Try saying: <br/>\n            Add {isIncome ? 'Income ' : 'Expense '}\n            for {isIncome ? '$100 ' : '$50 '}\n            in Category Salary {isIncome ? 'Business ' : 'House '}\n            for {isIncome ? 'Monday ' : 'Tuesday '}\n        </div>\n    )\n}\n\nexport default InfoCard\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  income: {\n    borderBottom: '10px solid rgba(0, 255, 0, 0.5)',\n  },\n  expense: {\n    borderBottom: '10px solid rgba(255, 0, 0, 0.5)',\n  },\n}));\n","// Custom hook to calculate charts\n\n// import { useContext } from 'react';\n// import { ExpenseTrackerContext } from './context/context';\n\n// import { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\n\n// const useTransactions = (title) => {\n//     resetCategories();\n//     const { transactions } = useContext(ExpenseTrackerContext);\n//     const rightTransactions = transactions.filter( (t) => t.type === title);\n//     const total = rightTransactions.reduce((sum, currVal) => sum += currVal.amount, 0);\n//     const categories = title === 'Income' ? incomeCategories : expenseCategories;\n\n//     console.log({rightTransactions, total, categories});\n\n//     rightTransactions.forEach((t) => {\n//         const category = categories.find( (c) => c.type === t.category)\n\n//         if(category) category.amount += t.amount;\n//     });\n\n//     const filteredCategories = categories.filter( (sc) => sc.amount > 0 );\n\n//     const chartData = {\n//         datasets: [{\n//             date: filteredCategories.map((c) => c.amount),\n//             backgroundColor: filteredCategories.map((c) => c.color),\n//         }], \n//         labels: filteredCategories.map( (c) =>  c.type)\n//     };\n\n//     return{ filteredCategories,total, chartData } \n// } \n\n// export default useTransactions;\n\n\nimport { useContext } from 'react';\nimport { ExpenseTrackerContext } from './context/context';\n\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\n\nconst useTransactions = (title) => {\n  resetCategories();\n  const { transactions } = useContext(ExpenseTrackerContext);\n  const rightTransactions = transactions.filter((t) => t.type === title);\n  const total = rightTransactions.reduce((acc, currVal) => acc += currVal.amount, 0);\n  const categories = title === 'Income' ? incomeCategories : expenseCategories;\n\n  rightTransactions.forEach((t) => {\n    const category = categories.find((c) => c.type === t.category);\n\n    if (category) category.amount += t.amount;\n  });\n\n  const filteredCategories = categories.filter((sc) => sc.amount > 0);\n\n  const chartData = {\n    datasets: [{\n      data: filteredCategories.map((c) => c.amount),\n      backgroundColor: filteredCategories.map((c) => c.color),\n    }],\n    labels: filteredCategories.map((c) => c.type),\n  };\n\n  return { filteredCategories, total, chartData };\n};\n\nexport default useTransactions;\n","import React from 'react';\nimport { Card, CardHeader, CardContent, Typography} from '@material-ui/core';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport useStyles from './styles'; //hook\n\n// custom hook to compute charts\nimport useTransactions from '../../useTransactions';\n\nconst Details = ({ title }) => {\n    // calling hook useStyles\n    const classes = useStyles();\n    const { total, chartData } = useTransactions(title);\n\n    return (\n        <Card className = {title === 'Income' ? classes.income : classes.expense}>\n            <CardHeader title={ title } />\n            <CardContent>\n                <Typography variant=\"h5\">${total}</Typography>\n                <Doughnut data={chartData} />\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default Details\n\n\n\n\n\n\n\n\n\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  desktop: {\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  mobile: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n  main: {\n    [theme.breakpoints.up('sm')]: {\n      paddingBottom: '5%',\n    },\n  },\n  last: {\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: theme.spacing(3),\n      paddingBottom: '200px',\n    },\n  },\n  grid: {\n    '& > *': {\n      margin: theme.spacing(2),\n    },\n  },\n}));\n","// import React from 'react';\n// import Main from './components/Main/Main'\n// import Details from './components/Details/Details';\n// import { Grid } from '@material-ui/core';\n// import { PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\n\n// import useStyles from './styles';\n\n// const App = () => {\n//     const classes = useStyles();\n\n//     return (\n//         <div>\n//             <Grid classname={ classes.grid } container spacinng={0} alignItems=\"center\" justify=\"center\" style={{height: '100vh'}}>\n//                 <Grid item xs={12} sm={4}>\n//                     <Details title=\"Income\"/>\n//                 </Grid>\n//                 <Grid item xs={12} sm={3}>\n//                     <Main />\n//                 </Grid>\n//                 <Grid item xs={12} sm={4}>\n//                     <Details title=\"Expense\"/>\n//                 </Grid>\n//             </Grid> \n//             <div>\n//             <PushToTalkButtonContainer>\n//                 <PushToTalkButton />\n//             </PushToTalkButtonContainer>\n//             </div>\n\n//         </div>\n//     )\n// }\n\n// export default App\n\n\nimport React, {useEffect, useRef} from 'react';\nimport Main from './components/Main/Main'\nimport Details from './components/Details/Details';\nimport { Grid } from '@material-ui/core';\nimport { PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\n\nimport useStyles from './styles'\n\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\n\nconst App = () => {\n  const classes = useStyles();\n  const { speechState } = useSpeechContext();\n  const main = useRef(null)\n\n  const executeScroll = () => main.current.scrollIntoView()    \n\n  useEffect(() => {\n    if (speechState === SpeechState.Recording) {\n      executeScroll();\n    }\n  }, [speechState]);\n\n  return (\n    <div>\n      <title>Expense Tracker</title>\n      <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" style={{ height: '100vh'}}>\n        <Grid item xs={12} sm={4} className={classes.mobile}>\n          <Details title=\"Income\" />\n        </Grid>\n        <Grid ref={main} item xs={12} sm={3} className={classes.main}>\n          <Main />\n        </Grid>\n        <Grid item xs={12} sm={4} className={classes.desktop}>\n          <Details title=\"Income\" />\n        </Grid>\n        <Grid item xs={12} sm={4} className={classes.last}>\n          <Details title=\"Expense\" />\n        </Grid>\n        <PushToTalkButtonContainer>\n          <PushToTalkButton />\n        </PushToTalkButtonContainer>\n      </Grid>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nimport { Provider } from './context/context';\n\nimport { SpeechProvider } from '@speechly/react-client';\n\n\nReactDOM.render(\n    <SpeechProvider appId = \"5d77f844-c7e3-46a8-8225-e6cbe7c0e728\" language=\"en-US\">\n        <Provider>\n            <App />\n        </Provider>\n    </SpeechProvider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}